[{"/Users/julianoperin/Desktop/helloTube/client/src/index.tsx":"1","/Users/julianoperin/Desktop/helloTube/client/src/App.tsx":"2","/Users/julianoperin/Desktop/helloTube/client/src/components/Sidebar/Sidebar.tsx":"3","/Users/julianoperin/Desktop/helloTube/client/src/components/Navbar/Navbar.tsx":"4","/Users/julianoperin/Desktop/helloTube/client/src/Pages/MainPage/MainPage.tsx":"5","/Users/julianoperin/Desktop/helloTube/client/src/Pages/SignInPage/SignInPage.tsx":"6"},{"size":146,"mtime":1610225557930,"results":"7","hashOfConfig":"8"},{"size":632,"mtime":1610809398948,"results":"9","hashOfConfig":"8"},{"size":167,"mtime":1610477528057,"results":"10","hashOfConfig":"8"},{"size":1621,"mtime":1611086720291,"results":"11","hashOfConfig":"8"},{"size":380,"mtime":1610809432052,"results":"12","hashOfConfig":"8"},{"size":2536,"mtime":1611452275780,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"o7i2cc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/julianoperin/Desktop/helloTube/client/src/index.tsx",[],["30","31"],"/Users/julianoperin/Desktop/helloTube/client/src/App.tsx",["32"],"import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n//! Pages\nimport MainPage from \"./Pages/MainPage/MainPage\";\nimport SignInPage from \"./Pages/SignInPage/SignInPage\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"top\">\n        <Navbar />\n      </div>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={() => <MainPage />} />\n          <Route exact path=\"/signin\" component={() => <SignInPage />} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/Users/julianoperin/Desktop/helloTube/client/src/components/Sidebar/Sidebar.tsx",[],"/Users/julianoperin/Desktop/helloTube/client/src/components/Navbar/Navbar.tsx",["33","34","35"],"import React, { useState, useEffect } from \"react\";\nimport \"./Navbar.css\";\n\nimport { FaYoutube } from \"react-icons/fa\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { BiVideoPlus } from \"react-icons/bi\";\nimport { url } from \"inspector\";\n\nconst Navbar: React.FC = () => {\n  const [loggedIn, setLoggedIn] = useState<boolean>(false);\n  const [profilePicture, setProfilePicture] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"loggedIn\") === \"true\") {\n      setLoggedIn(true);\n      setProfilePicture(sessionStorage.getItem(\"imageUrl\") as string);\n    }\n  }, [sessionStorage.getItem(\"loggedIn\")]);\n\n  return (\n    <div className=\"navbarContainer\">\n      <div className=\"left\">\n        <button className=\"btn-burger\">\n          <GiHamburgerMenu id=\"burgerIcon\" />\n        </button>\n        <FaYoutube id=\"youtubeIcon\" />\n        <h1>Hellotube</h1>\n      </div>\n      <div className=\"center\">\n        <input type=\"text\" className=\"searchBar\" placeholder=\"Search\" />\n        <button className=\"btn-search\">\n          <FaSearch />\n        </button>\n      </div>\n      <div className=\"right\">\n        <button className=\"create-video\">\n          <BiVideoPlus />\n        </button>\n        {loggedIn ? (\n          <img className=\"profile-pic\" src={profilePicture} />\n        ) : (\n          <button\n            className=\"signIn-btn\"\n            onClick={() => {\n              window.location.pathname = \"/signin\";\n            }}\n          >\n            Sign In\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/julianoperin/Desktop/helloTube/client/src/Pages/MainPage/MainPage.tsx",["36"],"import React from \"react\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport \"./MainPage.css\";\n\nconst MainPage = () => {\n  return (\n    <div className=\"MainPage\">\n      <div className=\"center\">\n        <Sidebar />\n        <div className=\"videoView\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","/Users/julianoperin/Desktop/helloTube/client/src/Pages/SignInPage/SignInPage.tsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":50,"nodeType":"43","messageId":"44","endLine":3,"endColumn":54},{"ruleId":"41","severity":1,"message":"45","line":8,"column":10,"nodeType":"43","messageId":"44","endLine":8,"endColumn":13},{"ruleId":"46","severity":1,"message":"47","line":19,"column":7,"nodeType":"48","endLine":19,"endColumn":41},{"ruleId":"49","severity":1,"message":"50","line":41,"column":11,"nodeType":"51","endLine":41,"endColumn":63},{"ruleId":"41","severity":1,"message":"52","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":14},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'url' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Navbar' is defined but never used.","no-global-assign","no-unsafe-negation"]