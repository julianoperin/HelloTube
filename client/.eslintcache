[{"/Users/julianoperin/Desktop/helloTube/client/src/index.tsx":"1","/Users/julianoperin/Desktop/helloTube/client/src/App.tsx":"2","/Users/julianoperin/Desktop/helloTube/client/src/components/Sidebar/Sidebar.tsx":"3","/Users/julianoperin/Desktop/helloTube/client/src/components/Navbar/Navbar.tsx":"4","/Users/julianoperin/Desktop/helloTube/client/src/Pages/MainPage/MainPage.tsx":"5","/Users/julianoperin/Desktop/helloTube/client/src/Pages/SignInPage/SignInPage.tsx":"6","/Users/julianoperin/Desktop/helloTube/client/src/components/Sidebar/SidebarData.tsx":"7","/Users/julianoperin/Desktop/helloTube/client/src/Pages/AccountPage/AccountPage.tsx":"8","/Users/julianoperin/Desktop/helloTube/client/src/Helpers/Context.tsx":"9"},{"size":146,"mtime":1610225557930,"results":"10","hashOfConfig":"11"},{"size":1012,"mtime":1612647164614,"results":"12","hashOfConfig":"11"},{"size":770,"mtime":1612648222500,"results":"13","hashOfConfig":"11"},{"size":2081,"mtime":1612647499154,"results":"14","hashOfConfig":"11"},{"size":538,"mtime":1612648012121,"results":"15","hashOfConfig":"11"},{"size":2639,"mtime":1612651638782,"results":"16","hashOfConfig":"11"},{"size":556,"mtime":1611714389189,"results":"17","hashOfConfig":"11"},{"size":1281,"mtime":1612654346382,"results":"18","hashOfConfig":"11"},{"size":100,"mtime":1612645257206,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"o7i2cc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/julianoperin/Desktop/helloTube/client/src/index.tsx",[],["43","44"],"/Users/julianoperin/Desktop/helloTube/client/src/App.tsx",["45"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n//! Pages\nimport MainPage from \"./Pages/MainPage/MainPage\";\nimport SignInPage from \"./Pages/SignInPage/SignInPage\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport AccountPage from \"./Pages/AccountPage/AccountPage\";\n\n//! Context\nimport { ToggleSidebarContext } from \"./Helpers/Context\";\n\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState<any>(true);\n\n  return (\n    <ToggleSidebarContext.Provider value={{ showSidebar, setShowSidebar }}>\n      <div className=\"top\">\n        <Navbar />\n      </div>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={() => <MainPage />} />\n          <Route exact path=\"/signin\" component={() => <SignInPage />} />\n          <Route exact path=\"/account\" component={() => <AccountPage />} />\n        </Switch>\n      </Router>\n    </ToggleSidebarContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/julianoperin/Desktop/helloTube/client/src/components/Sidebar/Sidebar.tsx",["46"],"import React, { useContext } from \"react\";\nimport \"./Sidebar.css\";\n\nimport { SidebarData } from \"./SidebarData\";\n\nconst Sidebar = () => {\n  return (\n    <div style={{ width: \"250px\" }}>\n      <ul className=\"sidebarRows\">\n        {SidebarData.map((item, key) => {\n          return (\n            <li\n              key={key}\n              className=\"row\"\n              id={item.path === window.location.pathname ? \"active\" : \"\"}\n              onClick={() => (window.location.pathname = item.path)}\n            >\n              <div id=\"iconContainer\">{item.icon}</div>\n              <div className=\"titleContainer\">\n                <h2>{item.title}</h2>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","/Users/julianoperin/Desktop/helloTube/client/src/components/Navbar/Navbar.tsx",["47","48","49"],"import React, { useState, useEffect, useContext } from \"react\";\nimport \"./Navbar.css\";\n\nimport { FaYoutube } from \"react-icons/fa\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { BiVideoPlus } from \"react-icons/bi\";\nimport { url } from \"inspector\";\nimport { ToggleSidebarContext } from \"../../Helpers/Context\";\n\nconst Navbar: React.FC = () => {\n  const [loggedIn, setLoggedIn] = useState<boolean>(false);\n  const [profilePicture, setProfilePicture] = useState<string>(\"\");\n  const { showSidebar, setShowSidebar } = useContext(ToggleSidebarContext);\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"loggedIn\") === \"true\") {\n      setLoggedIn(true);\n      setProfilePicture(sessionStorage.getItem(\"imageUrl\") as string);\n    }\n  }, [sessionStorage.getItem(\"loggedIn\")]);\n\n  return (\n    <div className=\"navbarContainer\">\n      <div className=\"left\">\n        <button\n          className=\"btn-burger\"\n          onClick={() => setShowSidebar(!showSidebar)}\n        >\n          <GiHamburgerMenu id=\"burgerIcon\" />\n        </button>\n\n        <div\n          className=\"icon-logo\"\n          onClick={() => (window.location.pathname = \"/\")}\n        >\n          <FaYoutube id=\"youtubeIcon\" />\n          <h1>HelloTube</h1>\n        </div>\n      </div>\n      <div className=\"center\">\n        <input type=\"text\" className=\"searchBar\" placeholder=\"Search\" />\n        <button className=\"btn-search\">\n          <FaSearch />\n        </button>\n      </div>\n      <div className=\"right\">\n        <button className=\"create-video\">\n          <BiVideoPlus />\n        </button>\n        {loggedIn ? (\n          <img\n            className=\"profile-pic\"\n            src={profilePicture}\n            onClick={() => (window.location.pathname = \"/account\")}\n          />\n        ) : (\n          <button\n            className=\"signIn-btn\"\n            onClick={() => {\n              window.location.pathname = \"/signin\";\n            }}\n          >\n            Sign In\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/julianoperin/Desktop/helloTube/client/src/Pages/MainPage/MainPage.tsx",["50"],"import React, { useContext } from \"react\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport \"./MainPage.css\";\n\nimport { ToggleSidebarContext } from \"../../Helpers/Context\";\n\nconst MainPage = () => {\n  const { showSidebar } = useContext(ToggleSidebarContext);\n\n  return (\n    <div className=\"MainPage\">\n      <div className=\"center\">\n        {showSidebar && <Sidebar />}\n\n        <div className=\"videoView\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","/Users/julianoperin/Desktop/helloTube/client/src/Pages/SignInPage/SignInPage.tsx",[],"/Users/julianoperin/Desktop/helloTube/client/src/components/Sidebar/SidebarData.tsx",[],"/Users/julianoperin/Desktop/helloTube/client/src/Pages/AccountPage/AccountPage.tsx",[],"/Users/julianoperin/Desktop/helloTube/client/src/Helpers/Context.tsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":3,"column":50,"nodeType":"57","messageId":"58","endLine":3,"endColumn":54},{"ruleId":"55","severity":1,"message":"59","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":27},{"ruleId":"55","severity":1,"message":"60","line":8,"column":10,"nodeType":"57","messageId":"58","endLine":8,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":21,"column":7,"nodeType":"63","endLine":21,"endColumn":41},{"ruleId":"64","severity":1,"message":"65","line":52,"column":11,"nodeType":"66","endLine":56,"endColumn":13},{"ruleId":"55","severity":1,"message":"67","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":14},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'url' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Navbar' is defined but never used.","no-global-assign","no-unsafe-negation"]