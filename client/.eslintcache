[{"/Users/julianoperin/Desktop/helloTube/client/src/index.tsx":"1","/Users/julianoperin/Desktop/helloTube/client/src/App.tsx":"2","/Users/julianoperin/Desktop/helloTube/client/src/components/Sidebar/Sidebar.tsx":"3","/Users/julianoperin/Desktop/helloTube/client/src/components/Navbar/Navbar.tsx":"4","/Users/julianoperin/Desktop/helloTube/client/src/Pages/MainPage/MainPage.tsx":"5"},{"size":146,"mtime":1610225557930,"results":"6","hashOfConfig":"7"},{"size":368,"mtime":1610676497941,"results":"8","hashOfConfig":"7"},{"size":167,"mtime":1610477528057,"results":"9","hashOfConfig":"7"},{"size":1124,"mtime":1610676235235,"results":"10","hashOfConfig":"7"},{"size":440,"mtime":1610476102558,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"o7i2cc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/julianoperin/Desktop/helloTube/client/src/index.tsx",[],["26","27"],"/Users/julianoperin/Desktop/helloTube/client/src/App.tsx",["28"],"import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n//! Pages\nimport MainPage from \"./Pages/MainPage/MainPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={() => <MainPage />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/julianoperin/Desktop/helloTube/client/src/components/Sidebar/Sidebar.tsx",[],["29","30"],"/Users/julianoperin/Desktop/helloTube/client/src/components/Navbar/Navbar.tsx",["31"],"import React, { useState } from \"react\";\nimport \"./Navbar.css\";\n\nimport { FaYoutube } from \"react-icons/fa\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { MdAddToQueue } from \"react-icons/md\";\n\nconst Navbar: React.FC = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  return (\n    <div className=\"navbarContainer\">\n      <div className=\"left\">\n        <button className=\"btn-burger\">\n          <GiHamburgerMenu id=\"burgerIcon\" />\n        </button>\n        <FaYoutube id=\"youtubeIcon\" />\n        <h1>Hellotube</h1>\n      </div>\n      <div className=\"center\">\n        <input type=\"text\" className=\"searchBar\" placeholder=\"Search\" />\n        <button className=\"btn-search\">\n          <FaSearch />\n        </button>\n      </div>\n      <div className=\"right\">\n        <button className=\"create-video\">\n          <MdAddToQueue />\n        </button>\n        {loggedIn ? (\n          <button className=\"profile-pic\"></button>\n        ) : (\n          <button className=\"signIn-btn\">Sign In</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/julianoperin/Desktop/helloTube/client/src/Pages/MainPage/MainPage.tsx",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":50,"nodeType":"38","messageId":"39","endLine":3,"endColumn":54},{"ruleId":"32","replacedBy":"40"},{"ruleId":"34","replacedBy":"41"},{"ruleId":"36","severity":1,"message":"42","line":10,"column":20,"nodeType":"38","messageId":"39","endLine":10,"endColumn":31},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["43"],["44"],"'setLoggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]